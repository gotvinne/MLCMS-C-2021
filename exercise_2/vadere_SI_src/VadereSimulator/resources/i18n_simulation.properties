# ScenarioChecker
ScenarioChecker.type.error=Error
ScenarioChecker.type.warning=Warning
ScenarioChecker.type.topography.error=Topography Error
ScenarioChecker.type.topography.warning=Topography Warning
ScenarioChecker.type.simulation.error=Simulations Attribute Error
ScenarioChecker.type.simulation.warning=Simulations Attribute Warning
ScenarioChecker.type.model.error=Model Attribute Error
ScenarioChecker.type.model.warning=Model Attribute Warning
ScenarioChecker.type.processor.error=Processor Error
ScenarioChecker.type.processor.warning=Processor Warning

ScenarioChecker.source.targetIdNotFound=The following target ids where not found in the scenario.
ScenarioChecker.source.noTargetIdSet=No Target Ids set for Source.
ScenarioChecker.source.noTargetIdAndNoSpawn=No Target Ids set for Source with SpawnNumber 0. This might be an error.
ScenarioChecker.source.idNotUnique=Multiple Sources have the same ID.
ScenarioChecker.source.spawnAtRandomButNotAtFreeSpace=Combination isSpawnAtRandomPositions=true and isUseFreeSpaceOnly=false can lead to illegal and undesired simulation states.
ScenarioChecker.source.toSmall=Source is to small
ScenarioChecker.source.spawnUseNotAtFreeSpace=useFreeSpaceOnly=false is Deprecated. Will be removed in future relases. Not all models can handle overlapping pedestrians.
ScenarioChecker.stairs.wrongTreadDim=Stair treadDepth outside of allowed dimension. Change the thread numbers to compensate.
ScenarioChecker.topography.offset=With a big translation in the coordinate origin the simulator can produce errors. Reset offset to (0,0) and use PedestrianOffsetPositionProcessor. This Processor will write trajectories with a selected offset.
ScenarioChecker.target.unused=The target is not used in any source. Remove target to increase performance.
ScenarioChecker.pedestrian.speedsetup=speedDistributionMean must be within min/max range.
ScenarioChecker.pedestrian.speedNotLogical=Min or Max speed of pedestrian is bigger than world record.
ScenarioChecker.pedestrian.speedIsNegative=Min or Max speed is negative.

ScenarioChecker.overlap.stair.stair=Stairs cannot overlap.
ScenarioChecker.overlap.target.stair=A target and a stairs element overlap in scenario.
ScenarioChecker.overlap.source.stair=A source and a stairs element overlap in scenario.
ScenarioChecker.overlap.source.target=A source and a target element overlap in scenario.
ScenarioChecker.overlap.source.source=Two source overlap. This can cause overlapping when useFreeSpaceOnly is not set.
ScenarioChecker.overlap.target.target=Two targets overlap.
ScenarioChecker.overlap.obstacle.stairs.err=Stairs are completely contained in an obstacle.
ScenarioChecker.overlap.obstacle.stairs.warn=Stairs overlap with an obstacle. This setup works but is not tested. Split in two stairs.
ScenarioChecker.overlap.obstacle.target.err=Target is completely contained in an obstacle.
ScenarioChecker.overlap.obstacle.target.warn=Target contains an obstacle. This setup works but reduces the actual size of the target.
ScenarioChecker.overlap.obstacle.source=Obstacle overlaps with a source. This setup will spawn pedestrians within the obstacle. 
ScenarioChecker.overlap.obstacle.obstacle=Two obstacles overlap / is enclosed completely. Delete one for better performance.

ScenarioChecker.simAttr.simTimeStepWrong=simTimeStep parameter outside of allowed range
ScenarioChecker.processor.measurementArea.hasToBeRectangular=Measurement Areas for the AreaDensityVoronoiProcessor have to be rectangular
ScenarioChecker.processor.checkAreasInAreaDensityVoronoiProcessor.mismatch=Sizes of measurement areas for the two areas for AreaDensityVoronoiProcessor do not match. Make sure that the area for the calculation of the density is smaller (or equal) than the area for the generation of the Voronoi diagram.
ScenarioChecker.processor.measuremetarea.doesNotExist=MeasurementArea referenced in processor does not exist.

ScenarioChecker.msg.ok=Scenario ok.
ScenarioChecker.msg.warn=Scenario contains warnings.
ScenarioChecker.msg.err=Scenario contains errors.
